<?php
/**
 * Plugin Name: WP Malware Scanner
 * Description: A plugin to scan WordPress files for suspicious code patterns and send email reports every 48 hours.
 * Version: 1.0.1
 * Author: Joshua Garza
 */

if (!defined('ABSPATH')) {
    exit; // Exit if accessed directly
}

// Hook to add an admin menu item for the scan page
add_action('admin_menu', 'wp_malware_scanner_menu');

// Function to add the admin menu
function wp_malware_scanner_menu() {
    add_menu_page('WP Malware Scanner', 'Malware Scanner', 'manage_options', 'wp-malware-scanner', 'wp_malware_scanner_page');
    add_submenu_page('wp-malware-scanner', 'Malware Scanner Settings', 'Settings', 'manage_options', 'wp-malware-scanner-settings', 'wp_malware_scanner_settings_page');
}

// Function to render the plugin scan page in the admin
function wp_malware_scanner_page() {
    if (isset($_POST['scan'])) {
        // Run the scan when the form is submitted
        $results = wp_malware_scanner_run();
        echo '<h2>Scan Results</h2>';
        if (!empty($results['log'])) {
            echo '<pre>' . htmlspecialchars($results['log']) . '</pre>';
            wp_malware_scanner_send_email($results['log']);
        } else {
            echo '<p>No suspicious code found.</p>';
        }
    }

    echo '<h1>WP Malware Scanner</h1>';
    echo '<form method="post">';
    submit_button('Run Scan', 'primary', 'scan');
}

// Function to render the settings page
function wp_malware_scanner_settings_page() {
    // Save email if the form is submitted
    if (isset($_POST['email_address'])) {
        update_option('wp_malware_scanner_email', sanitize_email($_POST['email_address']));
        echo '<div class="updated"><p>Email address saved!</p></div>';
    }

    $email = get_option('wp_malware_scanner_email', get_bloginfo('admin_email'));

    echo '<h1>WP Malware Scanner Settings</h1>';
    echo '<form method="post" action="">';
    echo '<table class="form-table">';
    echo '<tr>';
    echo '<th><label for="email_address">Send scan reports to:</label></th>';
    echo '<td><input type="email" name="email_address" id="email_address" value="' . esc_attr($email) . '" class="regular-text" /></td>';
    echo '</tr>';
    echo '</table>';
    submit_button('Save Email Address');
    echo '</form>';
}

// Define suspicious patterns
$suspicious_patterns = [
    '/function\(.*\){eval\(/',  // Basic obfuscated JavaScript pattern
    '/<script.*src=["\']https?:\/\/.*["\']/i',  // External script loading
    '/base64_decode/i',  // PHP base64_decode function
    '/eval\(.*\)/i',  // eval function
    '/unescape\(.*\)/i'  // unescape function
];

// Function to scan a single file and capture problematic lines
function wp_malware_scanner_scan_file($file_path) {
    global $suspicious_patterns;

    $content = file($file_path); // Read file into an array, each line becomes an element
    $matches = [];

    foreach ($content as $line_number => $line_content) {
        foreach ($suspicious_patterns as $pattern) {
            if (preg_match($pattern, $line_content)) {
                $matches[] = "Suspicious code found in file: $file_path on line " . ($line_number + 1) . ": " . trim($line_content);
            }
        }
    }

    return $matches;
}

// Function to recursively scan the WordPress directory for PHP and JS files
function wp_malware_scanner_run($directory = null) {
    if (!$directory) {
        $directory = ABSPATH; // Use the WordPress root directory by default
    }

    $results = '';
    $files = new RecursiveIteratorIterator(new RecursiveDirectoryIterator($directory));

    foreach ($files as $file) {
        if ($file->isFile()) {
            $file_path = $file->getRealPath();
            if (preg_match('/\.(php|js)$/', $file_path)) {
                $scan_result = wp_malware_scanner_scan_file($file_path);
                if ($scan_result) {
                    $results .= implode("\n", $scan_result) . "\n";
                }
            }
        }
    }

    return [
        'log' => $results
    ];
}

// Function to send the scan results via email using the email from settings
function wp_malware_scanner_send_email($scan_results) {
    $to = get_option('wp_malware_scanner_email', get_bloginfo('admin_email'));  // Use the saved email address or the site admin email as fallback
    $subject = 'WordPress Malware Scanner Report';
    $message = "The following files were found to contain suspicious code:\n\n" . $scan_results;
    $headers = ['Content-Type: text/plain; charset=UTF-8'];

    if (wp_mail($to, $subject, $message, $headers)) {
        echo '<p>Email sent with scan results.</p>';
    } else {
        echo '<p>Failed to send email with scan results.</p>';
    }
}

// Add a custom interval of 48 hours to the cron schedules
add_filter('cron_schedules', 'wp_malware_scanner_custom_cron_schedule');
function wp_malware_scanner_custom_cron_schedule($schedules) {
    $schedules['every_48_hours'] = [
        'interval' => 48 * 60 * 60, // 48 hours in seconds
        'display' => __('Every 48 Hours')
    ];
    return $schedules;
}

// Schedule the malware scan on plugin activation
register_activation_hook(__FILE__, 'wp_malware_scanner_schedule_scan');
function wp_malware_scanner_schedule_scan() {
    if (!wp_next_scheduled('wp_malware_scanner_scheduled_scan')) {
        wp_schedule_event(time(), 'every_48_hours', 'wp_malware_scanner_scheduled_scan');
    }
}

// Hook the scan function to the cron job
add_action('wp_malware_scanner_scheduled_scan', 'wp_malware_scanner_run_scheduled_scan');

// Function to run the scan and send results via email
function wp_malware_scanner_run_scheduled_scan() {
    $results = wp_malware_scanner_run();
    
    if (!empty($results['log'])) {
        wp_malware_scanner_send_email($results['log']);
    }
}

// Clear the scheduled event on plugin deactivation
register_deactivation_hook(__FILE__, 'wp_malware_scanner_clear_scheduled_scan');
function wp_malware_scanner_clear_scheduled_scan() {
    $timestamp = wp_next_scheduled('wp_malware_scanner_scheduled_scan');
    if ($timestamp) {
        wp_unschedule_event($timestamp, 'wp_malware_scanner_scheduled_scan');
    }
}
