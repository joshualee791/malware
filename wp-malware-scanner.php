<?php
/**
 * Plugin Name: WP Malware Scanner
 * Description: A plugin to scan WordPress files for suspicious code patterns and send email reports every 48 hours.
 * Version: 1.0.2
 * Author: Joshua Garza
 */

if (!defined('ABSPATH')) {
    exit; // Exit if accessed directly
}

// Hook to add an admin menu item for the scan page
add_action('admin_menu', 'wp_malware_scanner_menu');

// Enqueue Bootstrap and custom JS
add_action('admin_enqueue_scripts', 'wp_malware_scanner_enqueue_scripts');
function wp_malware_scanner_enqueue_scripts() {
    wp_enqueue_style('bootstrap-css', 'https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css');
    wp_enqueue_script('bootstrap-js', 'https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js', array('jquery'), null, true);
    wp_enqueue_script('wp-malware-scanner-js', plugin_dir_url(__FILE__) . 'wp-malware-scanner.js', array('jquery'), null, true);

    // Pass AJAX URL to JavaScript
    wp_localize_script('wp-malware-scanner-js', 'wp_malware_scanner', array(
        'ajax_url' => admin_url('admin-ajax.php'),
        'nonce'    => wp_create_nonce('wp_malware_scanner_nonce')
    ));
}

// Function to add the admin menu
function wp_malware_scanner_menu() {
    add_menu_page('WP Malware Scanner', 'Malware Scanner', 'manage_options', 'wp-malware-scanner', 'wp_malware_scanner_page');
    add_submenu_page('wp-malware-scanner', 'Malware Scanner Settings', 'Settings', 'manage_options', 'wp-malware-scanner-settings', 'wp_malware_scanner_settings_page');
}

// Function to render the plugin scan page in the admin with Bootstrap and a progress bar
function wp_malware_scanner_page() {
    ?>
    <div class="container">
        <h1 class="my-4">WP Malware Scanner</h1>
        <p>Click the button below to run a scan for suspicious code in the <code>wp-content</code> directory.</p>
        <button id="start-scan" class="btn btn-primary mb-4">Start Scan</button>

        <div class="progress mb-4" style="height: 30px; display:none;">
            <div id="scan-progress" class="progress-bar" role="progressbar" style="width: 0%;" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100">0%</div>
        </div>

        <div id="scan-results" class="alert alert-info" style="display: none;"></div>
    </div>
    <?php
}

// Function to render the settings page (no changes needed here)
function wp_malware_scanner_settings_page() {
    if (isset($_POST['email_address'])) {
        update_option('wp_malware_scanner_email', sanitize_email($_POST['email_address']));
        echo '<div class="updated"><p>Email address saved!</p></div>';
    }

    $email = get_option('wp_malware_scanner_email', get_bloginfo('admin_email'));

    echo '<h1>WP Malware Scanner Settings</h1>';
    echo '<form method="post" action="">';
    echo '<table class="form-table">';
    echo '<tr>';
    echo '<th><label for="email_address">Send scan reports to:</label></th>';
    echo '<td><input type="email" name="email_address" id="email_address" value="' . esc_attr($email) . '" class="regular-text" /></td>';
    echo '</tr>';
    echo '</table>';
    submit_button('Save Email Address');
    echo '</form>';
}

// AJAX handler for running the scan
add_action('wp_ajax_run_wp_malware_scan', 'wp_malware_scanner_ajax_run_scan');
function wp_malware_scanner_ajax_run_scan() {
    check_ajax_referer('wp_malware_scanner_nonce', 'nonce');

    $results = wp_malware_scanner_run();

    wp_send_json_success([
        'message' => !empty($results['log']) ? $results['log'] : 'No suspicious code found.',
    ]);
}

// Define suspicious patterns
$suspicious_patterns = [
    '/function\(.*\){eval\(/',  // Basic obfuscated JavaScript pattern
    '/<script.*src=["\']https?:\/\/.*["\']/i',  // External script loading
    '/base64_decode/i',  // PHP base64_decode function
    '/eval\(.*\)/i',  // eval function
    '/unescape\(.*\)/i'  // unescape function
];

// Function to scan a single file and capture problematic lines
function wp_malware_scanner_scan_file($file_path) {
    global $suspicious_patterns;

    $content = file($file_path); // Read file into an array, each line becomes an element
    $matches = [];

    foreach ($content as $line_number => $line_content) {
        foreach ($suspicious_patterns as $pattern) {
            if (preg_match($pattern, $line_content)) {
                $matches[] = "Suspicious code found in file: $file_path on line " . ($line_number + 1) . ": " . trim($line_content);
            }
        }
    }

    return $matches;
}

// Function to recursively scan the wp-content directory for PHP and JS files
function wp_malware_scanner_run($directory = null) {
    if (!$directory) {
        $directory = ABSPATH . 'wp-content'; // Only scan wp-content directory
    }

    $results = '';
    $files = new RecursiveIteratorIterator(new RecursiveDirectoryIterator($directory));

    foreach ($files as $file) {
        if ($file->isFile()) {
            $file_path = $file->getRealPath();
            if (preg_match('/\.(php|js)$/', $file_path)) {
                $scan_result = wp_malware_scanner_scan_file($file_path);
                if ($scan_result) {
                    $results .= implode("\n", $scan_result) . "\n";
                }
            }
        }
    }

    return [
        'log' => $results
    ];
}
